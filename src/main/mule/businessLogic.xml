<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:workday="http://www.mulesoft.org/schema/mule/workday"
    xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
    xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:http="http://www.mulesoft.org/schema/mule/http"
    xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd">

    <flow name="fromSalesforcetoWorkday" doc:id="8759532e-79b7-4789-990c-dc8e162bfd67">
        <batch:job jobName="fromSalesforcetoWorkdayBatch"
            doc:id="204892ae-0d97-4326-beae-310c8d52b7a6">
            <batch:process-records>
				<batch:step name="InsertNewUserToWorkday" doc:id="0653dd1b-05e1-42f2-a73a-9ad178ceb0b3" acceptExpression="#[payload.ExtId__c == null]">
					<logger level="INFO" doc:name="Logger" doc:id="fb955572-fee6-4800-8362-e8cb003c12a7" message="sfdc user for insert=#[payload]"/>
					<set-variable value="#[payload]" doc:name="Set Variable" doc:id="474a8f93-4ab8-41b0-a24b-b37e8502715e" variableName="sfdcUser"/>
					<ee:transform doc:name="Transform Message" doc:id="49a7dc98-30f1-486b-b782-8386af681bb4" >
						<ee:message >
						</ee:message>
						<ee:variables >
							<ee:set-variable variableName="xmlForInsert" ><![CDATA[%dw 2.0
output application/xml
fun lookupCountryISOCode(ISOCode) = {
    code: if (ISOCode == 'US') 'USA' else p('wday.country')    
}
ns ns0 urn:com.workday/bsvc
---
ns0#Hire_Employee_Request:
{
	ns0#Business_Process_Parameters: {
		ns0#Auto_Complete : true
	},
	ns0#Hire_Employee_Data: {
		ns0#Applicant_Data: {
			ns0#Personal_Data: {
				ns0#Contact_Data: {
					ns0#Address_Data: {
                        ns0#Address_Line_Data @(ns0#Type: "ADDRESS_LINE_1" ): payload.Address,
						ns0#Country_Reference: {
                            ns0#ID @(ns0#"type": "ISO_3166-1_Alpha-3_Code"): lookupCountryISOCode(payload.country).code
                        },
                        ns0#Country_Region_Reference: {
                            ns0#ID @(ns0#"type": "Country_Region_ID"): if ( payload.State?) payload.State else p('wday.state')
                        },
                        (ns0#Effective_Date: payload.CreatedDate as Date) if (payload.CreatedDate != null),
                        ns0#Municipality: if (payload.City == '') p('wday.city') else payload.City,
                        ns0#Postal_Code:  if (payload.PostalCode == '') p('wday.postalCode') else payload.PostalCode,
						ns0#Usage_Data @(ns0#Public: false): {
                            ns0#Type_Data @(ns0#Primary: true): {
                                ns0#Type_Reference: {
                                    ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
                                }
                            }                        
                        }                        
                    },
					ns0#Email_Address_Data: {
                        ns0#Email_Address: payload.Email,
                        ns0#Usage_Data @(ns0#Public: true): {
                            ns0#Type_Data @(ns0#Primary: true): {
                                ns0#Type_Reference: {
                                    ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
                                }
                            }                        
                        }
                    },
					ns0#Phone_Data: {
                        ns0#Phone_Number : payload.Phone,
                        ns0#Country_ISO_Code : lookupCountryISOCode(payload.country).code,                        
                        ns0#Usage_Data @(ns0#Public: true): {
                            ns0#Type_Data @(ns0#Primary: true): {
                                ns0#Type_Reference: {
                                    ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
                                }
                            }                        
                        }
                    },  
                },
				ns0#Name_Data: {                    
                    ns0#Legal_Name_Data: {
                        ns0#Name_Detail_Data: {
                            ns0#Country_Reference: {
                                ns0#ID @(ns0#"type" : "ISO_3166-1_Alpha-3_Code"): lookupCountryISOCode(payload.country).code
                            },
                            ns0#First_Name : payload.FirstName,
                            ns0#Last_Name : payload.LastName
                        }
                    }
                }
			}
		},
		ns0#Create_Workday_Account_Sub_Process : {
			ns0#Business_Sub_Process_Parameters: {
				ns0#Skip: true
			}
		},
		ns0#Hire_Employee_Event_Data: {
            ns0#Employee_Type_Reference: {
                ns0#ID @(ns0#"type": "Employee_Type_ID"): "Regular"
            },            
            ns0#Hire_Reason_Reference: {
                ns0#ID @(ns0#"type": "General_Event_Subcategory_ID"): "Hire_Employee_New_Hire_Fill_Vacancy"
            },
            ns0#Position_Details: {                
                ns0#Job_Profile_Reference: {
                    ns0#ID @(ns0#"type": "Job_Profile_ID"): p('wday.jobprofileId')
                },
                ns0#Location_Reference: {
                    ns0#ID @(ns0#"type": "Location_ID"): p('wday.location')
                },
                ns0#Pay_Rate_Type_Reference: {
                    ns0#ID @(ns0#"type": "Pay_Rate_Type_ID"): "Salary"
                },                
                ns0#Position_Time_Type_Reference: {
                    ns0#ID @(ns0#"type": "Position_Time_Type_ID"): "Full_time"
                }
            }
        },
		ns0#Organization_Reference: {
            ns0#ID @(ns0#"type": "Organization_Reference_ID"): p('wday.organization')
        },
		ns0#Propose_Compensation_for_Hire_Sub_Process : {
			ns0#Business_Sub_Process_Parameters: {
				ns0#Auto_Complete: true
			},
            ns0#Propose_Compensation_for_Hire_Data: {
                ns0#Pay_Plan_Data @(ns0#Replace: false): {
                    ns0#Pay_Plan_Sub_Data: {
                        ns0#Amount: 100,
                        ns0#Currency_Reference: {
    						ns0#ID @(ns0#"type": "Currency_ID"): p('wday.currency')     
						},
                        ns0#Frequency_Reference: {
    						ns0#ID @(ns0#"type": "Frequency_ID"): "Annual"     
						},
                        ns0#Pay_Plan_Reference: {
    						ns0#ID @(ns0#"type": "Compensation_Plan_ID"): "SALARY_Hourly_Plan"     
						}                    
					}
                }
            }
		}
	}
}]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
					<logger level="INFO" doc:name="Logger" doc:id="fbf6df15-e118-4466-a72b-66b15e274213" message="wday insert xml=#[vars.xmlForInsert]"/>
					<workday:invoke service="Staffing" operation="Hire_Employee" doc:name="Invoke" doc:id="c0f38125-16dd-4793-bf92-f4901eebffe7" config-ref="Workday_Config">
						<workday:message >
							<workday:body ><![CDATA[#[vars.xmlForInsert]]]></workday:body>
						</workday:message>
					</workday:invoke>
					<logger level="INFO" doc:name="Logger" doc:id="54b9ca91-dd00-4f01-9705-5c89d631bb88" message="wday retVal=#[output application/json --- payload]"/>
					<ee:transform doc:name="Transform Message" doc:id="583a944a-18e7-4cce-8c26-2c59d43f1b9a">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/java
---
[vars.sfdcUser 
- 'LastModifiedDate'
- 'LastModifiedById'
- 'type'
++ ExtId__c: payload.body.Hire_Employee_Event_Response.employeeReference.ID[1].value
]]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<salesforce:upsert type="User" doc:name="Upsert" doc:id="e41eda9c-04da-470f-ad18-10e5ba533339" config-ref="Salesforce_Config" externalIdFieldName="Id" />
				</batch:step>
				<batch:step
                    name="forEachUserInSalesforceGetUserFromWorkdayStep"
                    doc:id="89713774-362a-4e92-9bdc-41e31802bf38" acceptExpression="#[payload.ExtId__c != null]">
                    <logger level="INFO" doc:name="Query User in Workday"
                        doc:id="a25e1781-64a2-4cfd-86d9-f7776e31eaa8" />
					<set-variable value="#[payload]" doc:name="sfdcUser" doc:id="ee6088c1-0406-4d2f-9183-a69c06ea3a8c" variableName="sfdcUser"/>
					<ee:transform doc:name="Create GetWorkersRequest" doc:id="f4611b88-2b13-454f-ab5c-159df19efb6b">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
	ns0#Get_Workers_Request: {
		ns0#Request_References : {
			ns0#Worker_Reference: {
            ns0#ID @(ns0#"type": "Employee_ID" ): "36111"
        }

		},
		ns0#Response_Group: {
			ns0#Include_Employment_Information: true,
			ns0#Include_Organizations: false,
			ns0#Include_Personal_Information: true,
			ns0#Include_Reference: true,
			ns0#Include_Roles: true,
			ns0#Include_Transaction_Log_Data : true,
			ns0#Include_User_Account : true
		}	
	}
}


]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<logger level="INFO" doc:name="Logger" doc:id="cc085c3e-ae0e-4841-bb3f-bb1eddeb8e1e" message="wday request=#[payload]"/>
					<workday:invoke doc:name="Retrieve worker from Wday" doc:id="bd871afc-4a4f-4a59-92b8-64b805563709" config-ref="Workday_Config" service="Human_Resources" operation="Get_Workers" target="wdayUser" />
					<logger level="INFO" doc:name="Logger" doc:id="28ca110f-793b-4624-8d76-5324c8f3a08d" message="Workdays retVal=#[output application/json --- vars.wdayUser]"/>
                </batch:step>
                <batch:step name="GetLastModifiedDateInWorkday" doc:id="ea3182b8-3006-4139-8376-33394416b7e6" acceptExpression="#[vars.wdayUser != null]">
					<ee:transform doc:name="Transform Message" doc:id="6701e7c4-d19f-43c7-a675-58333d9d6a48" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
	ns0#Get_Workers_Request: {
		ns0#Request_Criteria: {
			ns0#Transaction_Log_Criteria_Data: [{
               ns0#Transaction_Date_Range_Data: {
                   ns0#Updated_From: (now() - |PT13S|) as DateTime,
                   ns0#Updated_Through: (now() - |PT3S|) as DateTime
               }
           }]

		},
		ns0#Request_References: {
			ns0#Worker_Reference: {
    	        ns0#ID @(ns0#"type": "Employee_ID" ): "36111"
	        }
		},
		ns0#Response_Group: {
			ns0#Include_Employment_Information: true,
			ns0#Include_Organizations: false,
			ns0#Include_Personal_Information: true,
			ns0#Include_Reference: true,
			ns0#Include_Roles: true,
			ns0#Include_Transaction_Log_Data : true,
			ns0#Include_User_Account : true
		}	
	}
}


]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<workday:invoke doc:name="Invoke" doc:id="0ff9d353-2874-4f48-9e80-3bab577bfb5c" config-ref="Workday_Config" service="Human_Resources" operation="Get_Workers"/>
					<logger level="INFO" doc:name="Logger" doc:id="0d76105e-22a9-4cdf-8e43-7fa3cf1f7fcd" message="wday retVal(2)=#[output application/xml --- payload]"/>
					<ee:transform doc:name="Get newest lastModifiedDate" doc:id="d85583dd-fac9-4754-ad0b-b9b38cd5cacc" >
						<ee:message >
						</ee:message>
						<ee:variables >
							<ee:set-variable variableName="lastModifiedDate" ><![CDATA[%dw 2.0
output application/java
---
{
}]]></ee:set-variable>
						</ee:variables>
					</ee:transform>
				</batch:step>
				<batch:step name="Batch_Step" doc:id="9afe5dbf-ef1e-41b7-9340-9569d49dec98" acceptExpression="#[vars.wdayUser != null]">
					<ee:transform doc:name="Transform Message" doc:id="504512d2-262e-4594-afb9-e27ecef8d773" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
fun lookupCountryISOCode(ISOCode) = {
	code: if (ISOCode == 'US') 'USA' else p('wday.country')	
}

fun createCountryRegionReference(countryISOCode, stateISOCode) = {
	code: lookupCountryISOCode(countryISOCode).code ++ "-" ++	stateISOCode
}

ns ns0 urn:com.workday/bsvc
---
ns0#Maintain_Contact_Information_for_Person_Event_Request: 
{
	ns0#Maintain_Contact_Information_Data: {
		ns0#Effective_Date: now() as Date ,
		ns0#Worker_Contact_Information_Data : {
			ns0#Address_Data : {
				ns0#Address_Line_Data @(ns0#Type : "ADDRESS_LINE_1"): if (payload.street == null) p('wday.location') else payload.street,
				ns0#Country_Reference: {
					ns0#ID @(ns0#"type": "ISO_3166-1_Alpha-3_Code"): lookupCountryISOCode(payload.country).code
				},
				ns0#Country_Region_Reference: {
					ns0#ID @(ns0#"type": "Country_Region_ID"):  if (payload.state == null ) p('wday.state') else createCountryRegionReference(payload.country,payload.state).code
				},				
				ns0#Municipality: if (payload.city == null) p('wday.city')   else payload.city,
				ns0#Postal_Code: if (payload."zip" == null) p('wday.postalCode') else payload."zip",
				ns0#Usage_Data @(ns0#Public: false): {
					ns0#Type_Data: {
						ns0#Type_Reference: {
							ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
						}
					}
				}
			},
			ns0#Email_Address_Data: {
				ns0#Email_Address: payload.email,
				ns0#Usage_Data @(ns0#Public: true): {
					ns0#Type_Data : {
						ns0#Type_Reference: {
							ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
						}
					}
				}
			},
			(ns0#Phone_Data: {
				ns0#Country_ISO_Code: lookupCountryISOCode(payload.country).code,
				ns0#Phone_Device_Type_Reference: {
					ns0#ID @(ns0#"type": "Phone_Device_Type_ID"):"1063.5"
				},
				ns0#Phone_Number: payload.home_phone replace "-" with "" ,
				ns0#Usage_Data @(ns0#Public: true): {
					ns0#Type_Data: {
						ns0#Type_Reference: {
							ns0#ID @(ns0#"type": "Communication_Usage_Type_ID"): "HOME"
						}
					}
				}
			}) if payload.home_phone != null			
		},
		ns0#Worker_Reference: {
			ns0#ID @(ns0#"type": "Employee_ID"): payload.user_name
		}
	}
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<workday:invoke doc:name="Invoke" doc:id="4b6c81a5-a5d9-40e3-93c4-0d50865a6428" config-ref="Workday_Config" service="Human_Resources" operation="Maintain_Contact_Information"/>
					<ee:transform doc:name="Transform Message" doc:id="10b44ec1-32ad-4310-88ab-3d083a5b8b0f" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/xml

fun lookupCountryISOCode(ISOCode) = {
	code: if (ISOCode == 'US') 'USA' else p('wday.country')	
}
ns ns0 urn:com.workday/bsvc
---
ns0#Change_Preferred_Name_Request: 
{
	ns0#Change_Preferred_Name_Data: {
		ns0#Name_Data: {
			ns0#Country_Reference: {
				ns0#ID @(ns0#"type": "ISO_3166-1_Alpha-3_Code"): lookupCountryISOCode(vars.worker.country).code
			},
			ns0#First_Name: vars.worker.first_name,
			ns0#Last_Name: vars.worker.last_name,
			(ns0#Middle_Name: vars.worker.middle_name) if vars.worker.middle_name != null		
		},
		ns0#Worker_Reference: {
			ns0#ID @(ns0#"type": "Employee_ID"): vars.worker.user_name
		}
	}
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<workday:invoke service="Human_Resources" doc:name="Invoke" doc:id="98f63863-9fbd-4a96-b4ab-2ab411f9d2f3" config-ref="Workday_Config" operation="Change_Preferred_Name"/>
				</batch:step>
            </batch:process-records>
            <batch:on-complete>
                <os:store key="syncState" doc:name="Set sync state to fromB"
                    doc:id="f08de372-2fb9-4aef-80ca-f6da2241fc75"
                    objectStore="SchedulerStatus">
                    <os:value><![CDATA[fromB]]></os:value>
                </os:store>
            </batch:on-complete>

        </batch:job>
    </flow>
    <flow name="fromWorkdaytoSalesforce" doc:id="8759532e-79b7-4789-990c-dc8e162bfd67">
        <batch:job jobName="fromWorkdaytoSalesforceBatch"
            doc:id="204892ae-0d97-4326-beae-310c8d52b7a6">
            <batch:process-records>
                <batch:step
                    name="forEachUserInWorkdayGetUserFromSalesforceStep"
                    doc:id="89713774-362a-4e92-9bdc-41e31802bf38">
					<salesforce:query-single doc:name="Query single" doc:id="b326e7f1-a059-433d-b8ee-2671e6366b2d" config-ref="Salesforce_Config" target="sfdcUser">
						<salesforce:salesforce-query >SELECT Id, Email, LastModifiedDate FROM User WHERE (Email = '#[payload.getWorkerData().getPersonalData().getContactData().getEmailAddressData().get(0).getEmailAddress()]')</salesforce:salesforce-query>
					</salesforce:query-single>
                </batch:step>
                <batch:step name="forEachUserToBeUpsertedInSalesforce"
                    doc:id="78a74ab4-9b91-416d-985a-acda2ac377eb"
                    acceptExpression="#[varssfdcUser.Id == null  or (payload.LastModifiedDateA &lt; payload.LastModifiedDate)]">
					<ee:transform doc:name="Transform Message" doc:id="48f67adf-4b87-41b1-a29a-6e81b0b58aff" >
						<ee:message >
							<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
{
	FirstName: payload.workerData.personalData.nameData.preferredNameData.nameDetailData.firstName,
	LastName: payload.workerData.personalData.nameData.preferredNameData.nameDetailData.lastName,
	City: payload.workerData.personalData.contactData.addressData[-1].municipality,
	PostalCode: payload.workerData.personalData.contactData.addressData[-1].postalCode,
	State: payload.workerData.personalData.contactData.addressData[-1].countryRegionReference.ID[1].value,
	Country: payload.workerData.personalData.contactData.addressData[-1].countryReference.ID[2].value,
	Email: payload.workerData.personalData.contactData.emailAddressData[-1].emailAddress,
	Street: payload.workerData.personalData.contactData.addressData[-1].addressLineData[-1].value,
	Phone: payload.workerData.personalData.contactData.phoneData[-1].phoneNumber,
	Extension: payload.workerData.personalData.contactData.phoneData[-1].phoneExtension,
	ProfileId: p('sfdc.profileId'),
	(Id: vars.sfdcUser.Id) if vars.sfdcUser != null, 
	
	// Each Username should be UNIQUE even between different sandboxes of a single instance 
 	// If you are trying this kick with one instance and multiple sandboxes, please make sure that the target username is not the same as the original as a duplicated username error will come up 
	Username: if (payload.workerData.userAccountData != null and payload.workerData.userAccountData.userName != null) (payload.workerData.userAccountData.userName)  else payload.workerData.personalData.contactData.emailAddressData[-1].emailAddress ++ ".target",
	
	TimeZoneSidKey: p('sfdc.timeZoneSidKey'),
	LocaleSidKey: if (payload.workerData.userAccountData != null and payload.workerData.userAccountData.localeReference != null) payload.workerData.userAccountData.localeReference.ID[-1].value  else p('sfdc.localeSidKey'),
	EmailEncodingKey: p('sfdc.emailEncodingKey'),
	LanguageLocaleKey: if (payload.workerData.userAccountData != null and payload.workerData.userAccountData.defaultDisplayLanguageReference != null) payload.workerData.userAccountData.defaultDisplayLanguageReference.ID[-1].value else p('sfdc.languageLocaleKey'),
	CommunityNickname: "CN_" ++ payload.workerData.personalData.contactData.emailAddressData[-1].emailAddress,
 	
 	ExtId__c: payload.workerReference.ID[1].value,
 	IsActive: true
}]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<salesforce:upsert type="User" doc:name="Upsert" doc:id="c45a5dd6-f7a2-4822-b61f-07f52b932ba5" config-ref="Salesforce_Config" externalIdFieldName="id"/>
                </batch:step>
            </batch:process-records>
            <batch:on-complete>
                <os:store key="syncState" doc:name="Set sync state to fromA"
                    doc:id="f08de372-2fb9-4aef-80ca-f6da2241fc75"
                    objectStore="SchedulerStatus">
                    <os:value><![CDATA[fromA]]></os:value>
                </os:store>
            </batch:on-complete>

        </batch:job>
    </flow>
</mule>

        