<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:workday="http://www.mulesoft.org/schema/mule/workday"
    xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
    xmlns:http="http://www.mulesoft.org/schema/mule/http"
    xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/workday http://www.mulesoft.org/schema/mule/workday/current/mule-workday.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="10da5503-b883-45fb-967b-f18394658ce4" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
<!-- 	<flow name="schedulerFlow" doc:id="aff4106d-d2f6-4366-940a-a380dcb1cf73"> -->
<!--         <scheduler doc:name="Scheduler" doc:id="b7921a7b-d505-4eaa-a71f-167a6e7cf0b8" > -->
<!-- 			<scheduling-strategy > -->
<!-- 				<fixed-frequency frequency="10000" startDelay="100"/> -->
<!-- 			</scheduling-strategy> -->
<!-- 		</scheduler> -->
<!-- 		<logger level="INFO" doc:name="Logger" doc:id="3ddd1d4f-7bb5-423f-991e-0c115a41c78d" message="Scheduler run"/> -->
<!-- 		<os:retrieve key="syncState" doc:name="Retrieve sync state" -->
<!--             objectStore="SchedulerStatus" target="syncState"> -->
<!--             <os:default-value><![CDATA[fromA]]></os:default-value> -->
<!--             <os:default-value><![CDATA[fromA]]></os:default-value> -->

<!--         </os:retrieve> -->
<!--         <choice doc:name="SyncState?" doc:id="b4703d83-780b-4e2d-bf5d-51b1566d66e2" -->
<!--             doc:name="SyncState?"> -->
<!--             <when -->
<!--                 expression="#[(vars.syncState != 'running' and vars.syncState == 'fromA') or vars.syncState == null]"> -->
<!--                 <logger level="INFO" doc:name="running from A" -->
<!--                     doc:id="c9cd1c27-5978-4ad8-b87f-99da49944447" -->
<!--                     message="running from A" /> -->
<!--                 <os:store key="syncState" doc:name="Set sync state to running" -->
<!--                     doc:id="340ac5e0-764f-4164-aeaa-14e616987553" -->
<!--                     objectStore="SchedulerStatus"> -->
<!--                     <os:value><![CDATA[running]]></os:value> -->
<!--                 </os:store> -->
<!--                 <flow-ref doc:name="queryFlowA" -->
<!--                     doc:id="b0c87553-d459-4f12-940c-0f8f19892266" name="queryFlowA" /> -->
<!--                 <flow-ref doc:name="fromInstanceAtoInstanceB" -->
<!--                     doc:id="43633fd4-8ec3-4899-8a82-93b88f816122" name="fromInstanceAtoInstanceB" /> -->


<!--             </when> -->
<!--             <when -->
<!--                 expression="#[vars.syncState != 'running' and vars.syncState == 'fromB']"> -->
<!--                 <logger level="INFO" doc:name="running from B" -->
<!--                     doc:id="840599bf-2442-45d6-b66d-fbe11593bd60" -->
<!--                     message="running from B" /> -->
<!--                 <os:store key="syncState" doc:name="Set sync state to running" -->
<!--                     doc:id="5059b820-0895-4454-9e50-e686d0f07758" -->
<!--                     objectStore="SchedulerStatus"> -->
<!--                     <os:value><![CDATA[running]]></os:value> -->
<!--                 </os:store> -->
<!--                 <flow-ref doc:name="queryFlowB" -->
<!--                     doc:id="121efa5b-33a7-4c76-aa72-3112507c4c0b" name="queryFlowB" /> -->
<!--                 <flow-ref doc:name="fromInstanceBtoInstanceA" -->
<!--                     doc:id="d8baf0c3-ace8-4d57-80c5-f7ea614d3946" name="fromInstanceBtoInstanceA" /> -->


<!--             </when> -->
<!--             <otherwise> -->
<!--                 <logger level="INFO" doc:name="Batch running" -->
<!--                     doc:id="bf955eec-4baf-4836-b7fd-7d77ff5ebcb1" -->
<!--                     message="Batch running" /> -->
<!--             </otherwise> -->
<!--         </choice> -->
<!--         <error-handler> -->
<!--             <on-error-propagate enableNotifications="true" -->
<!--                 logException="true" doc:name="On Error Propagate" -->
<!--                 doc:id="488b507d-e26c-4c56-8759-8bb4f6645d71" type="ANY"> -->
<!--                 <flow-ref doc:name="errorHandlingFlow" -->
<!--                     doc:id="afdaf73c-0137-4d60-84f6-5c41234771a3" name="errorHandlingFlow" /> -->
<!--             </on-error-propagate> -->
<!--         </error-handler> -->
<!--     </flow> -->
	<flow name="endpointsFlow" doc:id="145aca40-75c8-4aab-8610-975e370c1fff" >
		<http:listener doc:name="Listener" doc:id="b7147ed2-478a-4691-aa44-2551b5173925" config-ref="HTTP_Listener_config" path="/a"/>
		<flow-ref doc:name="queryFlowA" doc:id="88697fc7-8c84-42b4-9c2c-7d32ef0d46e7" name="queryFlowA"/>
		<flow-ref doc:name="fromSalesforcetoWorkday" doc:id="eda6ad22-8b65-4de4-8a8a-7cde1a4555a1" name="fromSalesforcetoWorkday"/>
	</flow>
	<flow name="endpointsFlow1" doc:id="6ccae94e-6988-4b21-bae2-94e180e426aa" >
		<http:listener doc:name="Listener" doc:id="98c220d2-55f8-47f5-a303-6f491f72aab5" config-ref="HTTP_Listener_config" path="/b"/>
		<flow-ref doc:name="queryFlowB" doc:id="0f0c7bf0-0568-46a5-b0b2-3b278c3bd81b" name="queryFlowB"/>
		<flow-ref doc:name="fromWorkdaytoSalesforce" doc:id="0949185f-c761-465c-a5b6-2d901bed3262" name="fromWorkdaytoSalesforce"/>
	</flow>
	<flow name="queryFlowA">
<!--         <os:retrieve key="watermark" objectStore="watermarkStoreA" -->
<!--             target="lastQueryDateA" doc:name="Retrieve lastQueryDateA"> -->
<!--             <os:default-value><![CDATA[${watermark.default.expression}]]></os:default-value> -->
<!--         </os:retrieve> -->
        <set-variable value="${watermark.default.expression}" doc:name="salesforceLastQueryDate" doc:id="db35b6e6-0d1a-4856-8146-d607cfb66883" variableName="salesforceLastQueryDate"/>
		<logger level="INFO"
            doc:name="Query User with filtering criteria from Salesforce"
            doc:id="6b2f8f74-396e-4cd7-baa4-535444b0d502" />
		<salesforce:query doc:name="Query" doc:id="5d446a3b-6e66-4473-a9a6-4431e608a247" config-ref="Salesforce_Config">
			<salesforce:salesforce-query >SELECT Id,Alias, Email, EmailEncodingKey, FirstName, LanguageLocaleKey, LastModifiedById, LastModifiedDate, LastName, LocaleSidKey, ProfileId, TimeZoneSidKey, Username,CommunityNickname,City,PostalCode,Country,State,Street,ExtId__c,Phone,Extension FROM User WHERE LastModifiedDate &gt; :salesforceLastQueryDate AND IsActive = true ORDER BY LastModifiedDate DESC LIMIT 1</salesforce:salesforce-query>
			<salesforce:parameters ><![CDATA[#[output applicaton/java
---
{
	"salesforceLastQueryDate" : vars.salesforceLastQueryDate
}]]]></salesforce:parameters>
		</salesforce:query>
		<logger level="INFO" doc:name="Logger" doc:id="9dff834e-feee-48b4-a05d-0abd00e312e8" message="SFDC user=#[output application/json --- payload]"/>
<!--         <os:store key="watermark" failOnNullValue="false" -->
<!--             objectStore="watermarkStoreA" doc:name="Store lastQueryDateA"> -->
<!--             <os:value><![CDATA[#[max(payload map $.LastModifiedDate)]]]></os:value> -->
<!--         </os:store> -->
    </flow>
    <flow name="queryFlowB">
<!--         <os:retrieve key="watermark" objectStore="watermarkStoreB" -->
<!--             target="lastQueryDateB" doc:name="Retrieve lastQueryDateB"> -->
<!--             <os:default-value><![CDATA[${watermark.default.expression}]]></os:default-value> -->
<!--         </os:retrieve> -->
        <set-variable value="${watermark.default.expression}" doc:name="wdayLastQueryDate" doc:id="f4be2df2-b815-46cf-a189-8dc79d49746e" variableName="wdayLastQueryDate"/>
		<logger level="INFO"
            doc:name="Query User with filtering criteria from Workday"
            doc:id="bdaa005e-a184-4fdd-aeb9-787fd3762a29" />
		<ee:transform doc:name="Transform Message" doc:id="5748fc1a-5d2a-4735-8a0c-145066a8ad53" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/xml
ns ns0 urn:com.workday/bsvc
---
{
    ns0#Get_Workers_Request: {
        ns0#Request_Criteria: {
            ns0#Transaction_Log_Criteria_Data: {
                ns0#Transaction_Date_Range_Data: {
                    ns0#Updated_From: vars.wdayLastQueryDate,
                    ns0#Updated_Through: (now() - |PT6S|)
                }
            },
            ns0#Exclude_Inactive_Workers: true,
            ns0#Exclude_Employees: false,
            ns0#Exclude_Contingent_Workers: false
        },
        ns0#Response_Group: {
            ns0#Include_Reference: true,
            ns0#Include_Personal_Information: true,
			ns0#Include_Organizations: true,
            ns0#Include_Transaction_Log_Data: true,
            ns0#Include_User_Account: true
        }
    }
}
]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="3795d86a-4452-4d9f-8a92-870dd4d176fd" message="wday request=#[payload]"/>
		<workday:invoke service="Human_Resources" operation="Get_Workers" doc:name="Invoke" doc:id="eac3b323-07db-42b4-b3d0-1e18b9c28e06" config-ref="Workday_Config"/>
		<logger level="INFO" doc:name="Logger" doc:id="211ef4bf-6aea-41b6-a09b-2a5b54211639" message="WDAY retVal=#[output application/json --- payload]"/>
		<ee:transform doc:name="Transform Message" doc:id="f5f9a31b-dd61-48a1-8098-d10423baf2c3" >
			<ee:message >
				<ee:set-payload ><![CDATA[%dw 2.0
output application/java
---
if (payload.body.Get_Workers_Response.Response_Results.Total_Results>0) payload.body.Get_Workers_Response.Response_Data.*Worker else []]]></ee:set-payload>
			</ee:message>
		</ee:transform>
<!--         <os:store key="watermark" failOnNullValue="false" -->
<!--             objectStore="watermarkStoreB" doc:name="Store lastQueryDateB"> -->
<!--             <os:value><![CDATA[#[max(payload map $.LastModifiedDate)]]]></os:value> -->
<!--         </os:store> -->
    </flow>
</mule>

        